@model DayTide.Models.DeleveryMan

@{
    ViewBag.Title = "EditDeliveryMan";
    Layout = "~/Views/Shared/_Layout_Moderator.cshtml";
}

<style>
    div.gallery {
        margin: 5px;
        border: 1px solid #ccc;
        float: left;
        width: 120px;
    }

        div.gallery img {
            width: 100%;
            height: auto;
        }

    div.desc {
        padding: 15px;
        text-align: center;
    }

    .warn {
        color: #756e15;
        background: #fffbd1;
        border: 1px solid #87803e;
        width: 100%;
        text-align: center;
    }
</style>

<div class="container">
    <h2 style="color:#4e73df"><b>EditDeliveryMan</b></h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4 style="color:#4e73df">DeleveryMan</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.DelManId)

    <div class="form-group">
        @Html.LabelFor(model => model.Picture, htmlAttributes: new { @class = "control-label col-md-2" })
        <input type="hidden" name="Picture" value="@Model.Picture"/>
        <div class="col-md-10">
            <img style=" border: 1px solid #ccc; width: 250px; height: auto" src="~/Content/Users/@Model.Picture" alt="@Model.Picture" width="400" height="250">
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Complete_Task, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Complete_Task, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.Complete_Task, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-warning" />
        </div>
    </div>
</div>
    }

    <div>
        @Html.ActionLink("Back to List", "CustomizeDeliveryMan", new { }, new { @class = "btn btn-outline-primary" })
    </div>

</div>